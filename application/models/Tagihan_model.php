<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tagihan_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get tagihan by id
     */
    function get_tagihan($id)
    {
        return $this->db->get_where('tagihan',array('id'=>$id))->row_array();
    }
        
    /*
     * Get all tagihan
     */
     function tampilpelanggan()
    {
    return $this->db->get('pelanggan ')->result_array();
    }   
    function get_all_tagihan($idu,$set)
    {
        $this->db->order_by('id', 'desc');
       
                    //->where('status','Belum Bayar')
       if ($set=='admin1') {
                 return $this->db
                             ->where('t.status','Belum Bayar')
                             ->where('a.class','user')
                             ->select('t.id,t.tahun_tagih,t.bulan_tagih,t.pemakaian,t.status,p.nama,t.id_pelanggan,p.id_admin')
                             ->join('pelanggan p','p.id=t.id_pelanggan')
                             ->join('admin a','p.id_admin=a.id')
                             ->get('tagihan t')->result_array();
                            }
         else {
                 return $this->db
                             ->where('t.status','Belum Bayar')
                             ->where('p.id_admin',$idu)
                             ->select('t.id,t.tahun_tagih,t.bulan_tagih,t.pemakaian,t.status,p.nama,t.id_pelanggan,p.id_admin')
                             ->join('pelanggan p','p.id=t.id_pelanggan')
                             ->get('tagihan t')->result_array();
                            }
                
    }
        

    /*
     * function to add new tagihan
     */

    function tagihan($id)
    {
        
        $q= $this->db->select('pemakaian')->from('tagihan')->where('id',$id)->get();
        return $q->row()->pemakaian;
    }
    function bulan($id)
    {
        
        $q= $this->db->select('bulan_tagih')->from('tagihan')->where('id',$id)->get();
        return $q->row()->bulan_tagih;
    }
    function tahun($id)
    {
        
        $q= $this->db->select('tahun_tagih')->from('tagihan')->where('id',$id)->get();
        return $q->row()->tahun_tagih;
    }

    function tarif($id)
    {
        
        $q= $this->db->select('id_pelanggan')->from('tagihan')->where('id',$id)->get();
        $w=$q->row()->id_pelanggan;
        $e= $this->db->select('kd_tarif')->from('pelanggan')->where('id',$w)->get();
        $r=$e->row()->kd_tarif;
        $t= $this->db->select('tarif_perkwh')->from('tarif')->where('kode',$r)->get();
        return $t->row()->tarif_perkwh;

    }

     function pelanggan($id)
    {
        return $this->db
                    //->where('status','Belum Bayar')
                    //->select('t.id,t.tahun_tagih,t.bulan_tagih,t.pemakaian,t.status,p.nama,t.id_pelanggan')
                    ->join('pelanggan p','p.id=t.id_pelanggan')
                    ->get_where('tagihan t',array('t.id'=>$id))->row_array();

    }
     function add_pembayaran($params)
    {
        $this->db->insert('pembayaran',$params);
        return $this->db->insert_id();
        $this->session->set_userdata($params);
    }
    
    function add_tagihan($params)
    {
        $this->db->insert('tagihan',$params);
        return $this->db->insert_id();
    }
    function tampiltagihan()
    {
        return $this->db->get('tagihan')->result_array();
    }
    /*
     * function to update tagihan
     */
    function update_tagihan($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('tagihan',$params);
    }
    function update_tagihan1($id,$status)
    {
        
        $data= array(
            'status' =>$status ,
         );
        
        $this->db->where('id', $id)
                ->update('tagihan', $data);

    }
    function update_tagihan2($id,$po)
    {
        
       
        $this->db->where('id', $id)
                ->update('tagihan', $po);

    }
    function update_pelanggan($id)
    {
        $po= array(
            'status' => 'Belum Ditagih',
             );
       
        $this->db->where('id', $id)
                ->update('pelanggan', $po);

    }
    /*
    /*
     * function to delete tagihan
     */
    function delete_tagihan($id)
    {
        return $this->db->delete('tagihan',array('id'=>$id));
    }
    function delete_tagihan1($id)
    {
        return $this->db->delete('tagihan',array('id'=>$id));
    }
    function caridata($idu){
    $c = $this->input->POST ('cari');
    $this->db->like('p.nama', $c);

    $query = $this->db
                    //->where('status','Belum Bayar' )
    ->where('p.id_admin',$idu)
                    ->select('t.id,t.tahun_tagih,t.bulan_tagih,t.pemakaian,t.status,p.nama,t.id_pelanggan')
                    ->join('pelanggan p','p.id=t.id_pelanggan')
                    ->get('tagihan t');
    return $query->result_array();
 }
}
