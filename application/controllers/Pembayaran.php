<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pembayaran extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pembayaran_model');
        $this->load->model('Tagihan_model');
        $this->load->helper('url');
        if($this->session->userdata('logged_in') == false)
        {
                redirect('login');
        }

    } 

    /*
     * Listing of pembayaran
     */
    function index()
    {
      
        $data['pembayaran'] = $this->Pembayaran_model->get_all_pembayaran();
        $data['tagihan']=$this->Pembayaran_model->tampiltagihan();
        $data['main_view'] = 'pembayaran/index';
        $this->load->view('template', $data);
    }

    /*
     * Adding a new pembayaran
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'tgl_bayar' => $this->input->post('tgl_bayar'),
				'id_tagihan' => $this->input->post('id_tagihan'),
				'jumlah_tagihan' => $this->input->post('jumlah_tagihan'),
				'biaya_denda' => $this->input->post('biaya_denda'),
				'biaya_admin' => $this->input->post('biaya_admin'),
				'status' => $this->input->post('status'),
            );
            
            $pembayaran_id = $this->Pembayaran_model->add_pembayaran($params);
            redirect('pembayaran/index');
        }
        else
        {            
            $data['tagihan']=$this->Pembayaran_model->tampiltagihan();
            $data['main_view'] = 'pembayaran/add';
            $this->load->view('template', $data);        
        }
    }  

    /*
     * Editing a pembayaran
     */
    function edit($id)
    {   
        // check if the pembayaran exists before trying to edit it
        $data['pembayaran'] = $this->Pembayaran_model->get_pembayaran($id);
        
        if(isset($data['pembayaran']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'tgl_bayar' => $this->input->post('tgl_bayar'),
					'id_tagihan' => $this->input->post('id_tagihan'),
					'jumlah_tagihan' => $this->input->post('jumlah_tagihan'),
					'biaya_denda' => $this->input->post('biaya_denda'),
					'biaya_admin' => $this->input->post('biaya_admin'),
					'status' => $this->input->post('status'),
                );

                $this->Pembayaran_model->update_pembayaran($id,$params);            
                redirect('pembayaran/index');
            }
            else
            {
                $data['tagihan']=$this->Pembayaran_model->tampiltagihan();
                $data['main_view'] = 'pembayaran/edit';
                $this->load->view('template', $data);         
                   }
        }
        else
            show_error('The pembayaran you are trying to edit does not exist.');
    } 
    function konfirmasi($id)
    {
        $kon='Sudah Bayar';

         $params = array(
                    'status' => $kon,
                  );

                //$this->Tagihan_model->delete_tagihan1($id);
            $this->Pembayaran_model->update_pembayaran1($id,$params);            
            redirect('pembayaran/index');
    }

    function hap($id)
    {
     $pembayaran = $this->Pembayaran_model->get_pembayaran($id);

        // check if the pembayaran exists before trying to delete it
        if(isset($pembayaran['id_tagihan']))
        {
             $idpel=$this->Pembayaran_model->idpelanggan($id);
             $this->Pembayaran_model->delete_pembayaran1($id);
              $this->Tagihan_model->delete_tagihan1($id);
      
      $this->Pembayaran_model->delete_pelanggan($idpel);
        }
        else
            show_error('The pembayaran you are trying to delete does not exist.');
     

     
     
      redirect('pembayaran/index');
    }

    function gajadi($id)
    {
      $kon='Belum Bayar';
       $params = array(
          'status' => $kon,
          
                );
             $this->Tagihan_model->update_tagihan2($id,$params);
             $this->Pembayaran_model->delete_pembayaran1($id);
            redirect('pembayaran/index');
    }

    /*
     * Deleting pembayaran
     */
    function remove($id)
    {
        $pembayaran = $this->Pembayaran_model->get_pembayaran($id);

        // check if the pembayaran exists before trying to delete it
        if(isset($pembayaran['id']))
        {
            $this->Pembayaran_model->delete_pembayaran($id);
            redirect('pembayaran/index');
        }
        else
            show_error('The pembayaran you are trying to delete does not exist.');
    }

    function cari() {
       $data['pembayaran']=$this->Pembayaran_model->caridata();
       //jika data yang dicari tidak ada maka akan keluar informasi 
       //bahwa data yang dicari tidak ada
       if($data['pembayaran']==null) {
          print 'maaf data yang anda cari tidak ada atau keywordnya salah';
          //print br(2);
          print anchor('pembayaran','kembali');
           $this->load->view('errors/error');
          }
          else {
              $data['main_view'] = 'pembayaran/index';
        $this->load->view('template', $data); 
            }
        }
    
}
