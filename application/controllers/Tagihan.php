<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tagihan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tagihan_model');
        $this->load->model('Pelanggan_model');
        $this->load->model('Pembayaran_model');
        $this->load->helper('url');
        if($this->session->userdata('logged_in') == false)
        {
                redirect('login');
        }

    } 

    /*
     * Listing of tagihan
     */
    function index()
    {

        $iu=$this->session->userdata('id');
        $set=$this->session->userdata('class');
        $data['tagihan'] = $this->Tagihan_model->get_all_tagihan($iu,$set);
        $data['pelanggan']=$this->Tagihan_model->tampilpelanggan();
        $data['main_view'] = 'tagihan/index';
        $this->load->view('template', $data);
        
    }

    /*
     * Adding a new tagihan
     */
    function add($id)
    {   

        $data['sat']='Belum Bayar';
        //$lol=$this->input->post('lol');
         $data['pelanggannn'] = $this->Pelanggan_model->get_pelanggan($id);
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'tahun_tagih' => $this->input->post('tahun_tagih'),
				'bulan_tagih' => $this->input->post('bulan_tagih'),
				'pemakaian' => $this->input->post('pemakaian'),
				'status' => $this->input->post('status'),
				'id_pelanggan' => $this->input->post('id_pelanggan'),

            );
            $paramss = array(
                'status' => $this->input->post('ztatuz'),

            );
            
            $this->session->set_flashdata('announce', 'Berhasil Tambah Data');
            $tagihan_id = $this->Tagihan_model->add_tagihan($params);
                          $this->Pelanggan_model->update_pelanggan($id,$paramss);
            redirect('tagihan/index');
        }
        else
        {   
                  
            $data['tagihan']=$this->Pembayaran_model->tampiltagihan();
            $data['main_view'] = 'tagihan/add';
            $this->load->view('template', $data);        }
    }  

    /*
     * Editing a tagihan
     */
    function edit($id)
    {   
        // check if the tagihan exists before trying to edit it
        $data['tagihan'] = $this->Tagihan_model->get_tagihan($id);
        
        if(isset($data['tagihan']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'tahun_tagih' => $this->input->post('tahun_tagih'),
					'bulan_tagih' => $this->input->post('bulan_tagih'),
					'pemakaian' => $this->input->post('pemakaian'),
					'status' => $this->input->post('status'),
					'id_pelanggan' => $this->input->post('id_pelanggan'),
                );
                $this->session->set_flashdata('announce', 'Berhasil Ubah Data');
                $this->Tagihan_model->update_tagihan($id,$params);            
                redirect('tagihan/index');
            }
            else
            {
                
                $data['pelanggan']=$this->Tagihan_model->tampilpelanggan();
                $data['main_view'] = 'tagihan/edit';
                $this->load->view('template',$data);
            }
        }
        else
            show_error('The tagihan you are trying to edit does not exist.');
    } 

    /*
     * Deleting tagihan
     */
    function remove($id)
    {
        $tagihan = $this->Tagihan_model->get_tagihan($id);
        $idpel=$this->Pembayaran_model->idpelanggan($id);
        // check if the tagihan exists before trying to delete it
        if(isset($tagihan['id']))
        {
            $this->session->set_flashdata('announce', 'Berhasil Hapus Data');
            $this->Tagihan_model->delete_tagihan($id);
            $this->Tagihan_model->update_pelanggan($idpel);
            redirect('tagihan/index');
        }
        else
            show_error('The tagihan you are trying to delete does not exist.');
    }

    function bayar($id)
    {   
        $data['tagihan'] = $this->Tagihan_model->get_tagihan($id);
        $pemakaian= $this->Tagihan_model->tagihan($id);
        $tarif= $this->Tagihan_model->tarif($id);
        $tot=$tarif*$pemakaian;
        $data['jumlah']=$tot;   
        $status=$this->input->post('status');

        // check if the tagihan exists before trying to edit it
        if(isset($_POST) && count($_POST) > 0)     
        {   

            $params = array(
                
                'id_tagihan' => $this->input->post('id_tagihan'),
                'jumlah_tagihan' => $this->input->post('total'),
                'biaya_denda' => $this->input->post('biaya_denda'),
                'biaya_admin' => $this->input->post('biaya_admin'),
                'status' =>$status ,
                'tgl_bayar' => $this->input->post('tgl_bayar'),
            );
            $this->session->set_flashdata('announce', 'Berhasil Membayar');
            $this->Tagihan_model->add_pembayaran($params);
            $this->Tagihan_model->update_tagihan1($id,$status); 
            //$this->Tagihan_model->delete_tagihan($id);

            redirect('pembayaran/index');      
        }
    
        else
        {                  
            $data['pelanggan']=$this->Tagihan_model->pelanggan($id);      
            $data['main_view'] = 'tagihan/bayar';
            $this->load->view('template', $data);        
        }


    }

    function cari() {
        $iu=$this->session->userdata('id');
       $data['tagihan']=$this->Tagihan_model->caridata($iu);
       //jika data yang dicari tidak ada maka akan keluar informasi 
       //bahwa data yang dicari tidak ada
       if($data['tagihan']==null) {
          print 'maaf data yang anda cari tidak ada atau keywordnya salah';
          //print br(2);
          print anchor('tagihan','kembali');

        //$data['main_view'] = 'tagihan/index';
        $this->load->view('errors/error');
          }
          else {
              $data['main_view'] = 'tagihan/index';
        $this->load->view('template', $data); 
            }
        }

    function owe($id)
     {
        $data['pembayaran'] = $this->Pembayaran_model->get_pembayaran($id);
         $data['tagihan'] = $this->Tagihan_model->get_tagihan($id);
        $pemakaian= $this->Tagihan_model->tagihan($id);
        $tarif= $this->Tagihan_model->tarif($id);
        $tot=$tarif*$pemakaian;
        $data['jumlah']=$tot;   
        $status=$this->input->post('status');  
        $data['pelanggan']=$this->Tagihan_model->pelanggan($id);    
        $data['main_view'] = 'tagihan/print';
        $this->load->view('template',$data);
     } 

        
}
